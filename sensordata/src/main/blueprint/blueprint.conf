blueprint {
  streamlets {
#    rsocket-ingress = com.lightbend.sensordata.rsocket.ingress.RSocketIngressSource
#    rsocket-ingress = com.lightbend.sensordata.rsocket.ingress.BinaryRequestStream
#    rsocket-ingress = com.lightbend.sensordata.rsocket.ingress.UTF8FireAndForget
    rsocket-ingress = com.lightbend.sensordata.rsocket.ingress.BinaryFireAndForget
    metrics = com.lightbend.sensordata.SensorDataToMetrics
    validation = com.lightbend.sensordata.MetricsValidation
    valid-logger = com.lightbend.sensordata.ValidMetricLogger
    invalid-logger = com.lightbend.sensordata.InvalidMetricLogger
    rotorizer = com.lightbend.sensordata.RotorSpeedFilter
    rotor-avg-logger = com.lightbend.sensordata.RotorspeedWindowLogger
  }
  topics {
    sensordata {
      producers = [rsocket-ingress.out]
      consumers = [metrics.in]
    }
    metics {
      producers = [metrics.out]
      consumers = [validation.in]
    }
    valid-metics {
      producers = [validation.valid]
      consumers = [valid-logger.in,rotorizer.in]
    }
    invalid-metics {
      producers = [validation.invalid]
      consumers = [invalid-logger.in]
    }
    rotor-data {
      producers = [rotorizer.out]
      consumers = [rotor-avg-logger.in]
    }
  }
}